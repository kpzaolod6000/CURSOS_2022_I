# -*- coding: utf-8 -*-
"""CD_tarea_5_SLopeOne100k

Automatically generated by Colaboratory.


## Importando librerias
"""
import pandas as pd
import numpy as np
from secretstorage import Item
from Matrizdev import matrixDev
from Predict import getPredict
from indexMatrix import indexMatrix
from desEstandar import desStandard

from columnsName import getColumnsName

"""## Leendo el data

"""

data = {
        'Taylor Swift': [ 4.0, 5.0,np.nan, 5.0],
        'PSY': [3.0,2.0, 3.5,np.nan],
        'Whitney Houston': [4.0, np.nan, 4.0, 3.0],
        }


df_Data = pd.DataFrame(data, index= ['Amy', 'Ben', 'Clara', 'Daisy'])
print("Dataset\n")
print(df_Data)

columns_names = getColumnsName(df_Data)
# print(columns_names)

"""## Algoritmo de Slope One

# ### Desviación Estandar
# """

item_1 = 'PSY'
item_2 = 'Taylor Swift'
item_1 = df_Data[item_1].to_numpy()
item_2 = df_Data[item_2].to_numpy()

desv,card = desStandard(item_1,item_2)
# print(desv)
# print(card)


"""### Construccion de la matriz"""
n_tam = len(columns_names)

np_Matrix,cardinls = indexMatrix(n_tam,df_Data.to_numpy())
# print(np_Matrix)

Matrixdev,cardinls = matrixDev(np_Matrix,cardinls,columns_names)
print("\nMatriz de desviacion estandar\n")
print(Matrixdev)
# print(cardinls)

"""### Predicción"""

print("\n")
user_predict =  input("Escriba el usuario calificador: ")
item_cal =  input("Escriba el item a calificar: ")

predict = getPredict(df_Data,Matrixdev,cardinls,user_predict,item_cal,columns_names)
# print(columns_names)
print("\n")
print(user_predict," podria calificar a ",item_cal, " con un puntaje de: " ,predict)
# print(predict)
