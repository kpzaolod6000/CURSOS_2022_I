# -*- coding: utf-8 -*-
"""CD_tarea_2_MOVIES_knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nRxZPjspjScgZ1deiViu_wxpAaBDKk4G

## Importando librerias
"""

import pandas as pd
import numpy as np
from time import time

from distances.manhattan import Manhattan
from distances.euclidean import Euclidiana
from distances.pearson import Pearson
from distances.coseno import Coseno
from distances.knn import Knn

"""## Leendo el data

"""


data = pd.read_csv(r"/home/judal/Documentos/CURSOS_2022_II/Ciencia de Datos/clase_3/knn/data.csv")
print("Dataset data")
print(data)

"""
## KNN 
### Pruebas en la dataset de bandas de musicas

### Columnas
"""

columns_names = list(data.columns.values)
columns_names = columns_names[1:]
columns_names

"""### Algoritmo Knn con datas numpy"""

#del data["X"]
data.pop("x")
data_numpy = data.to_numpy()
#print(data_numpy)
#print(data_numpy[:,1])
usert = 'Angelica'
ndx = columns_names.index(usert)

start_time = time()
print("\nLos vecinos mas cercanos son: ")
k_neighbours = Knn(data_numpy,columns_names,Euclidiana,ndx)
print(k_neighbours,"\n")
elapsed_time = time() - start_time
print("Tiempo transcurrido: %0.10f milisegundos." % (elapsed_time * 1000),"\n\n")



"""## KNN 
### Pruebas en la dataset de Movie Ratings
"""


data_movie = pd.read_csv(r"/home/judal/Documentos/CURSOS_2022_II/Ciencia de Datos/clase_3/knn/Movie_Ratings.csv")
print("Dataset Movie Ratings")
print(data_movie)

"""### Columnas

"""

columns_MR = list(data_movie.columns.values)
columns_MR = columns_MR[1:]
columns_MR

"""### Algoritmo Knn con datas numpy"""

#del data["X"]

data_movie.pop("Unnamed: 0")
data_numpyMR = data_movie.to_numpy()
# print(data_numpyMR)
# print(data_numpyMR[:,1])

usert = 'Matt'
ndx_movie = columns_MR.index(usert)

start_time = time()

print("\nLos vecinos mas cercanos son: ")
k_neighbours =Knn(data_numpyMR,columns_MR,Euclidiana,ndx_movie)
print(k_neighbours,"\n")
elapsed_time = time() - start_time
print("Tiempo transcurrido: %0.10f milisegundos." % (elapsed_time * 1000))

