# -*- coding: utf-8 -*-
"""CD_tarea_3_100k.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rDbnuJN4I94rI1xPQ8ICBIWlpPOhonZ_


## Importando librerias
"""

import pandas as pd
import numpy as np
from time import time

from distances.manhattan import Manhattan,Manhattan_D,Manhattan_lib
from distances.euclidean import Euclidiana,Euclidiana_D,Euclidiana_lib
from distances.pearson import Pearson,Pearson_D,Pearson_lib
from distances.coseno import Coseno,Coseno_D,Coseno_lib
from distances.knn import Knn

"""## Leendo el data

"""


data_ratings = pd.read_csv(r"/home/judal/Documentos/CURSOS_2022_II/Ciencia de Datos/clase_3/SimCosenoAJus100k/ratings.dat",sep=",", header=None, names=['userId','movieId','rating','times'])
df_Data = data_ratings.pivot_table(index='movieId', columns='userId', values='rating')
print("Dataset\n")
print(df_Data)

"""
## KNN 
### Pruebas en la dataset de bandas de musicas

### Columnas
"""
columns_names = list(df_Data.columns.values)
columns_names = columns_names[:]
# print(columns_names)

"""### Algoritmo Knn con datas numpy"""

#del data["X"]
# df_Data.pop("x")
data_numpy = df_Data.to_numpy()
print(data_numpy)
#print(data_numpy[:,1])
usert = 1
ndx = columns_names.index(usert)

start_time = time()
print("\nLos vecinos mas cercanos son: ")
k_neighbours = Knn(data_numpy,columns_names,Pearson,ndx)
print(k_neighbours[:10],"\n")
elapsed_time = time() - start_time
print("Tiempo transcurrido: %0.10f segundos." % (elapsed_time ),"\n\n")


"""### Algoritmo knn con decimales"""

start_time = time()
print("\nLos vecinos mas cercanos son: ")
k_neighbours = Knn(data_numpy,columns_names,Pearson_D,ndx)
print(k_neighbours[:10],"\n")
elapsed_time = time() - start_time
print("Tiempo transcurrido: %0.10f segundos." % (elapsed_time ),"\n\n")



"""### Algoritmo knn usando librerias"""

start_time = time()
print("\nLos vecinos mas cercanos son: ")
k_neighbours = Knn(data_numpy,columns_names,Pearson_lib,ndx)
print(k_neighbours[:10],"\n")
elapsed_time = time() - start_time
print("Tiempo transcurrido: %0.10f segundos." % (elapsed_time ),"\n\n")

